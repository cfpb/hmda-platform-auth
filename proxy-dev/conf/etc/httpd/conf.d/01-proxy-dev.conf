# Reverse proxy setup for local development
SSLCertificateFile    /etc/pki/tls/certs/localhost.crt
SSLCertificateKeyFile /etc/pki/tls/private/localhost.key

# HMDA Platform UI
Listen 2000

<VirtualHost *:2000>
    # Enable HTTPS with default Apache cert
    SSLEngine On

    ProxyPass        / ${UI_UPSTREAM_URI}
    ProxyPassReverse / ${UI_UPSTREAM_URI}
</VirtualHost>


# Keycloak
Listen 3000

<VirtualHost *:3000>
    SSLEngine On

    ProxyRequests Off

    <Proxy balancer://keycloak>
        BalancerMember http://keycloak_1:8080
        BalancerMember http://keycloak_2:8080
    </Proxy>

    # Keycloak requires Forward X-Forwarded-* headers
    ProxyPreserveHost On
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port ${KEYCLOAK_FORWARDED_PORT}

    ProxyPass        / balancer://keycloak/
    ProxyPassReverse / balancer://keycloak/

</VirtualHost>


# HMDA Platform Public API
Listen 4000
 
<VirtualHost *:4000>
    SSLEngine On

    # CORS Preflight
    # SEE: https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests 
    <If "%{REQUEST_METHOD} == 'OPTIONS' && %{HTTP:Origin} != '' && %{HTTP:Access-Control-Request-Headers} != '' && %{HTTP:Access-Control-Request-Method} != ''">
        LogMessage "CORS Preflight - Origin: %{req:Origin}; Headers: %{req:Access-Control-Request-Headers}; Methods: %{req:Access-Control-Request-Method}"
  
        Header always set Access-Control-Allow-Origin "*"
        Header always set Access-Control-Allow-Methods: "GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD"
        Header always set Access-Control-Allow-Headers: "Authorization, Cache-Control, Accept, Content-Type"
        Header always set Access-Control-Max-Age "600"
  
        RewriteEngine On
        RewriteRule ^(.*)$ $1 [R=204,L]
    </If>
    <ElseIf "%{HTTP:Origin} != ''">
       LogMessage "CORS Request - Origin: %{req:Origin}"
 
       Header always set Access-Control-Allow-Origin "*"
    </ElseIf>

    ProxyPass        / ${PUBLIC_API_UPSTREAM_URI}
    ProxyPassReverse / ${PUBLIC_API_UPSTREAM_URI}

</VirtualHost>


# Auth Proxy
Listen 5000

<VirtualHost *:5000>
    SSLEngine On

    # mod_auth_openidc requires X-Forwarded-* headers
    ProxyPreserveHost On
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port ${AUTH_PROXY_FORWARDED_PORT}

    ProxyPass        / ${AUTH_PROXY_UPSTREAM_URI}
    ProxyPassReverse / ${AUTH_PROXY_UPSTREAM_URI}

</VirtualHost>
